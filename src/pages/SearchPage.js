// –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
import React, { useState } from "react";
import '../styles/SearchPage.css';
import {stops} from "../components/json/stops";
import {routes} from "../components/json/routes";
import Header from "../components/basic-components/Header";
/*import Footer from "../components/basic-components/Footer";*/

// –ú–∞—Å—Å–∏–≤—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–∞—Ö –∏ –º–∞—Ä—à—Ä—É—Ç–∞—Ö
let stopsInfo = [],
    routesInfo = [];

// –ó–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫
for(let i = 0; i < stops.length; i++) {stopsInfo[i] = stops[i].name;}

// –ó–∞–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–∏–≤ –º–∞—Ä—à—Ä—É—Ç–æ–≤
for(let i = 0; i < routes.length; i++) {routesInfo[i] = `${routes[i].from} - ${routes[i].to}`;}

// –§—É–Ω–∫—Ü–∏—è –ª–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ SearchPage
export default function SearchPage() {
    // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    const [filteredListStops, setFilteredListStops] = new useState(stopsInfo),
          [filteredListRoutes, setFilteredListRoutes] = new useState(routesInfo);

    // –§—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
    const filterBySearch = (event) => {
        // –ü–æ–ª—É—á–∞–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        const query = event.target.value;
        // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –≤ —Å–ø–∏—Å–∫–µ
        var updatedListStops = [...stopsInfo];
        // –í—ã–≤–æ–¥–∏–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∑–∞–ø—Ä–æ—Å
        updatedListStops = updatedListStops.filter((item) => {
            return item.toLowerCase().indexOf(query.toLowerCase()) !== -1;
        });
        // –¢—Ä–∏–≥–≥–µ—Ä –≤—ã–≤–æ–¥–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        setFilteredListStops(updatedListStops);

        // –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –≤ —Å–ø–∏—Å–∫–µ
        var updatedListRoutes = [...routesInfo];
        // –í—ã–≤–æ–¥–∏–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ –∑–∞–ø—Ä–æ—Å
        updatedListRoutes = updatedListRoutes.filter((item) => {
            return item.toLowerCase().indexOf(query.toLowerCase()) !== -1;
        });
        // –¢—Ä–∏–≥–≥–µ—Ä –≤—ã–≤–æ–¥–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        setFilteredListRoutes(updatedListRoutes);
    };

    return (
        <div className="global__container">
            <Header />
            <div className="container search__page__main">
                <div className="row heading__frame__search">
                    <div className="col-md-12 heading__text__search">
                        <p className="heading">–ü–æ–∏—Å–∫</p>
                    </div>
                    <p className="col-md-12 text__content">–ò—â–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ</p>
                </div>
                <div className="row search__frame">
                    <div className="col-md-12 search-header">
                        <div className="search-text">–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:</div>
                        <input id="search-box" onChange={filterBySearch} />
                    </div>
                    <div className="col-md-5 placeholder__search">
                        <div className="search-text">–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ üëá</div>
                        <div id="item-list">
                            <ol>
                                {filteredListStops.map((item, index) => (
                                    <li className="list__value" key={index}>{item}</li>
                                ))}
                            </ol>
                        </div>
                    </div>
                    <div className="col-md-5 placeholder__search">
                        <div className="search-text">–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã üëá</div>
                        <div id="item-list">
                            <ol>
                                {filteredListRoutes.map((item, index) => (
                                    <li className="list__value" key={index}>{item}</li>
                                ))}
                            </ol>
                        </div>
                    </div>
                </div>
            </div>
            {/*<Footer />*/}
        </div>
    );
}