{"version":3,"file":"static/js/759.ed194e72.chunk.js","mappings":"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","sources":["components/sign-up/Input.js","components/sign-up/Submit.js","pages/SignUp.js"],"sourcesContent":["// Импорт библиотеки React\r\nimport React from 'react';\r\nimport '../../styles/sign_up_style.css';\r\n\r\n// Функция для создания Input\r\nfunction Input({type, name, value, onChange, placeholder}) {\r\n    if (name === 'email')\r\n        return (\r\n            <div className=\"col-md-12 input__work__email\">\r\n                <label htmlFor=\"work__email\" id=\"label__3\">Адрес электронной почты</label>\r\n                <input id=\"work__email\"\r\n                       type={type}\r\n                       name={name}\r\n                       value={value}\r\n                       onChange={onChange}\r\n                       placeholder={placeholder}/>\r\n            </div>\r\n        );\r\n    else if(name === 'password')\r\n        return (\r\n            <div className=\"col-md-12 input__password\">\r\n                <label htmlFor=\"password\" id=\"label__4\">Пароль</label>\r\n                <input id=\"password\"\r\n                       type={type}\r\n                       name={name}\r\n                       value={value}\r\n                       onChange={onChange}\r\n                       placeholder={placeholder} />\r\n            </div>\r\n        );\r\n    else if(name === 'name')\r\n        return (\r\n            <div className=\"col-md-12 input__first__name\">\r\n                <label htmlFor=\"password\" id=\"label__1\">Имя</label>\r\n                <input id=\"password\"\r\n                       type={type}\r\n                       name={name}\r\n                       value={value}\r\n                       onChange={onChange}\r\n                       placeholder={placeholder} />\r\n            </div>\r\n        );\r\n    else if(name === 'surname')\r\n        return (\r\n            <div className=\"col-md-12 input__second__name\">\r\n                <label htmlFor=\"password\" id=\"label__2\">Фамилия</label>\r\n                <input id=\"password\"\r\n                       type={type}\r\n                       name={name}\r\n                       value={value}\r\n                       onChange={onChange}\r\n                       placeholder={placeholder} />\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Input;\r\n","// Импорт библиотеки React\r\nimport React from 'react';\r\nimport '../../styles/log_in_style.css';\r\n\r\n// Функция для создания Submit\r\nfunction Submit({submit = 'Зарегистрироваться'}) {\r\n    return (\r\n        <div className=\"row alert__frame \">\r\n            <p className=\"col-md-12 alert\"></p>\r\n            <button className=\"col-md-12 button__autorization\" type=\"submit\">{submit}</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Submit;\r\n","// Импорт необходимых модулей\r\nimport React, {useState} from 'react';\r\nimport '../styles/log_in_style.css';\r\nimport Input from \"../components/sign-up/Input\";\r\nimport Submit from \"../components/sign-up/Submit\";\r\n\r\n// Функция для добавления страницы авторизации\r\nfunction SignUp() {\r\n    const baseUrl = 'https://64e5fa4809e64530d17f5f7a.mockapi.io/api/db/users';\r\n\r\n    const [name, setName] = useState('');\r\n    const [surname, setSurname] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const successMessage = \"*Успешная регистрация\";\r\n    const successClass = \"success\";\r\n    const errorMessage = \"*Проверьте правильность вводимых данных\";\r\n    const errorClass = \"error\";\r\n\r\n    const addUser = (userData) => {\r\n        fetch(baseUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            },\r\n            body: JSON.stringify(userData)\r\n        });\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'surname':\r\n                setSurname(value);\r\n                break;\r\n            case 'email':\r\n                setEmail(value);\r\n                break;\r\n            case 'password':\r\n                setPassword(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (checkEmailFormat(email) && checkPasswordFormat(password)) {\r\n            addUser({\r\n                name: name,\r\n                surname: surname,\r\n                email: email,\r\n                password: password\r\n            });\r\n\r\n            showAlert(successMessage,successClass);\r\n        } else {\r\n            showAlert(errorMessage, errorClass);\r\n        }\r\n    };\r\n\r\n    // Функция, для показа состояния\r\n    function showAlert(message, className) {\r\n        setAlertMessage(message);\r\n    }\r\n\r\n    const checkEmailFormat = (email) => {\r\n        const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        if (regex.test(email)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    const checkPasswordFormat = (password) => {\r\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*\\W).+$/;\r\n        if (regex.test(password)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <div className=\"window\">\r\n            <div className=\"container glass\">\r\n                <div className=\"row form\">\r\n                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                        <p className=\"col-12\" id=\"sign__up__paragraph\">Регистрация</p>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className=\"row vertical__frame\">\r\n                                <Input type=\"text\"\r\n                                       name=\"name\"\r\n                                       value={name}\r\n                                       onChange={handleInputChange}\r\n                                       placeholder=\"Имя\" />\r\n                                <Input type=\"text\"\r\n                                       name=\"surname\"\r\n                                       value={surname}\r\n                                       onChange={handleInputChange}\r\n                                       placeholder=\"Фамилия\" />\r\n                                <Input type=\"text\"\r\n                                       name=\"email\"\r\n                                       value={email}\r\n                                       onChange={handleInputChange}\r\n                                       placeholder=\"E-mail\" />\r\n                                <Input type=\"text\"\r\n                                       name=\"password\"\r\n                                       value={password}\r\n                                       onChange={handleInputChange}\r\n                                       placeholder=\"Пароль\" />\r\n                                </div>\r\n                            {alertMessage && <div id=\"alert\" className={`alert alert__frame ${alertMessage === successMessage ? successClass : errorClass}`}>{alertMessage}</div>}\r\n                            <Submit />\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 text-center\">\r\n                        <div className=\"registration\">\r\n                            <p id=\"question\" className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12\">Уже есть аккаунт?</p>\r\n                            <a href=\"#\" className=\"col-lg-6 col-md-6 col-sm-12 col-xs-12 link__autorization\">Авторизация</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignUp;"],"names":["_ref","type","name","value","onChange","placeholder","_jsxs","className","children","_jsx","htmlFor","id","_ref$submit","submit","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","surname","setSurname","_useState5","_useState6","email","setEmail","_useState7","_useState8","password","setPassword","_useState9","_useState10","alertMessage","setAlertMessage","successMessage","successClass","errorClass","handleInputChange","e","_e$target","target","showAlert","message","checkEmailFormat","test","checkPasswordFormat","onSubmit","userData","preventDefault","fetch","method","headers","body","JSON","stringify","Input","concat","Submit","href"],"sourceRoot":""}